# 1. 점화식 의미 -> d[k][i] = i까지의 정수 k개를 더해서 합이 i가 되는 경우의 수
# 2. 작은 문제
# 3. 점화식 d[k][i] = sum(d[k<=][i - 1])
# 4. 시간복잡도 O(NK^2) = 8,000,000
# 5. 코드
n, k = map(int, input().split())
d = [[0] * (n + 1) for _ in range(k + 1)]
MOD = 1000000000

for i in range(1, k + 1):
    d[i][1] = i

for i in range(2, n + 1):
    for j in range(1, k + 1):
        for z in range(1, j + 1):
            d[j][i] += d[z][i - 1]
            d[j][i] %= MOD

print(d[k][n] % MOD)

# k = 2
# d[1][1] = 1
# d[2][1] = 2
#
# d[1][2] = 1
# d[2][2] = 3
#
# d[1][3] = 1
# d[2][3] = 4
#
#
# k = 3
# d[1][1] = 1
# d[2][1] = 2
# d[3][1] = 3
#
# d[1][2] = 1
# d[2][2] = 3
# d[3][2] = 6
#
# d[1][3] = 1
# d[2][3] = 4
# d[3][3] = 10
#
# k = 4
# d[1][1] = 1
# d[2][1] = 2
# d[3][1] = 3
# d[4][1] = 4
#
# d[1][2] = 1
# d[2][2] = 3
# d[3][2] = 6
# d[4][2] = 10

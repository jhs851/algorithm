# 1. 점화식 정의 -> n번째까지 가장 많이 마실 수 있는 포도주의 양
# 2. 작은 문제
#   -> i번 포도주는 j번 연속해서 마신 포도주
#   -> d[i][0] = 0번 연속해서 마신 포도주 -> a[i]를 마시지 않음
#   -> d[i][1] = 1번 연속해서 마신 포도주 -> a[i-1]를 마시지 않음
#   -> d[i][2] = 2번 연속해서 마신 포도주 -> a[i-1]과 a[i]를 마심(a[i-2]는 마시지 않았어야함)
# 3. 점화식
#   -> d[i][0] = max(d[i-1])
#   -> d[i][1] = d[i-1][0] + a[i]
#   -> d[i][2] = d[i-1][1] + a[i]
# 4. 시간복잡도 -> O(N)
# 5. 코드
import sys

n = int(input())
a = [0] + [int(sys.stdin.readline()) for _ in range(n)]
d = [[0] * 3 for _ in range(n + 1)]
d[1][1] = a[1]
d[1][2] = a[1]

for i in range(2, n + 1):
    d[i][0] = max(d[i - 1])
    d[i][1] = d[i - 1][0] + a[i]
    d[i][2] = d[i - 1][1] + a[i]

print(max(d[n]))

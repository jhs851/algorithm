# 합을 나타낼 때는 수를 1개 이상 사용해야 한다. 단, 같은 수를 두 번 이상 연속해서 사용하면 안 된다.
# 1. 점화식 정의 -> d[n] = 1, 2, 3의 합으로 나타내는 방법의 수
# 2. 작은 문제들로 나누기
#   -> 기존 점화식에서 조건을 추가해버린다.
#   -> 기존 점화식은 d[n] = d[n-1] + d[n-2] + d[n-3]
#   -> d[i][j] = i를 1, 2, 3의 합으로 나타내는 방법의 수, 마지막에 사용한 수는 j
# 3. 점화식
# 4. 시긴복잡도
# 5. 코드
import sys

MAX = 100000
MOD = 1000000009
d = [[0] * 4 for _ in range(MAX + 1)]

for i in range(1, MAX + 1):
    if i - 1 >= 0:
        d[i][1] = d[i - 1][2] + d[i - 1][3]

        if i == 1:
            d[i][1] = 1

    if i - 2 >= 0:
        d[i][2] = d[i - 2][1] + d[i - 2][3]

        if i == 2:
            d[i][2] = 1

    if i - 3 >= 0:
        d[i][3] = d[i - 3][1] + d[i - 3][2]

        if i == 3:
            d[i][3] = 1

    d[i][1] %= MOD
    d[i][2] %= MOD
    d[i][3] %= MOD

t = int(input())

for _ in range(t):
    n = int(sys.stdin.readline())
    print(sum(d[n]) % 1000000009)
